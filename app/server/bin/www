global.demand = path => require(`${__dirname}/../../${path}`);

const http = require('http');

// eslint-disable-next-line no-undef
const app = demand('app');
// eslint-disable-next-line no-undef
const logger = demand('middlewares/logger');
// eslint-disable-next-line no-undef
const config = demand('configs');

const server = http.createServer(app);
const port = normalizePort(config.server.port);

server.listen(port);

server.on('error', (error) => {
	if (error.syscall !== 'listen') {
		throw error;
	}

	switch (error.code) {
	case 'EACCES':
		logger.error('Port ' + port + ' requires elevated privileges');
		process.exit(1);
		break;
	case 'EADDRINUSE':
		logger.error('Port ' + port + ' is already in use');
		process.exit(1);
		break;
	default:
		throw error;
	}
});

server.on('listening', () => {
	const address = server.address();
	logger.info('Listening on port ' + address.port);
});

const normalizePort = (value) => {
	const port = parseInt(value, 10);
	let result = false;

	if(isNaN(port)) {
		result = value;
	}

	if(port >= 0) {
		result = port;
	}

	return result;
};